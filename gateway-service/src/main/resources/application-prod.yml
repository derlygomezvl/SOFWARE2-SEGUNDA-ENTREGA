server:
  port: ${GATEWAY_PORT:8080}
  compression:
    enabled: true
  http2:
    enabled: true

spring:
  application:
    name: gateway-service

  # RabbitMQ Configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: /
    connection-timeout: 10000
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3

# URLs de los microservicios
services:
  identity:
    url: ${IDENTITY_URL:http://identity:8081}
  submission:
    url: ${SUBMISSION_URL:http://submission:8082}
  notification:
    url: ${NOTIFICATION_URL:http://notification:8083}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000  # 24 horas

# Gateway Security
gateway:
  security:
    enforceRoleCheck: ${GATEWAY_ENFORCE_ROLE_CHECK:true}
    publicPaths:
      - /api/identity/auth/login
      - /api/identity/auth/register
      - /api/auth/login
      - /api/auth/register
      - /api/auth/roles
      - /api/gateway/health
      - /api/gateway/info
      - /actuator/health
      - /swagger-ui/**
      - /v3/api-docs/**

  # Timeouts para llamadas a microservicios
  connect-timeout: ${GATEWAY_CONNECT_TIMEOUT:5000}
  read-timeout: ${GATEWAY_READ_TIMEOUT:30000}

# Actuator Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true

# Logging
logging:
  level:
    root: INFO
    co.unicauca.gateway: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.amqp: WARN
    org.springframework.cloud.gateway: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"